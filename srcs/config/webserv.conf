server {
        #server port (80) and host(default_server)
        #first server will be the default
        listen          80 default_server;

        #server can have multiple names
        server_name     localhost www.localhost;

        #default error pages
        error_page 404 /custom_404.html;
        location = /custom_404.html {
                root /usr/share/nginx/html;
                internal;
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
                internal;
        }

        #limit client body size
        client_max_body_size 200000;
        
        #setup routes with one or multiple of the following rules/configuration (routes wont be using regexp):
        # ∗ define a list of accepted HTTP Methods for the route
        methods {
                GET HEAD POST PUT DELETE CONNECT OPTIONS TRACE PATCH;
        }
        # ∗ define a directory or a file from where the file should be search (for example if url /kapouet is rooted to /tmp/www, url /kapouet/pouic/toto/pouet is /tmp/www/pouic/toto/pouet)
        root /var/www/;

        # ∗ turn on or off directory listing
        autoindex on;

        # ∗ default file to answer if the request is a directory
        ???

        # ∗ execute CGI based on certain file extension (for example .php)
        # · Because you wont call the cgi directly use the full path as PATH_INFO
        # · Just remember that for chunked request, your server need to unchun- ked it and the CGI will expect EOF as end of the body.
        # · SamethingsfortheoutputoftheCGI.ifnocontent_lengthisreturned from the CGI, EOF will mean the end of the returned data.
        # · Your program should set the following Meta-Variables
        metavariables {
                AUTH_TYPE CONTENT_LENGTH CONTENT_TYPE GATEWAY_INTERFACE PATH_INFO PATH_TRANSLATED QUERY_STRING REMOTE_ADDR REMOTE_IDENT REMOTE_USER REQUEST_METHOD REQUEST_URI SCRIPT_NAME SERVER_NAME SERVER_PORT SERVER_PROTOCOL SERVER_SOFTWARE;
        }
        # · Your program should call the cgi with the file requested as first argument
        # · the cgi should be run in the correct directory for relativ path file access
        # · your server should work with php-cgi
        # ∗ make the route able to accept uploaded files and configure where it should be saved
        return          301 https://$server_name$request_uri;
}